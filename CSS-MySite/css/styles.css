body {
  color: #40514E;
  margin:0;
  text-align: center;
  /* font-family: verdana, sans-serif; */
  /* font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;    >>> this code will fall back to next available font if main font is not present in system. */
  font-family: 'Merriweather', serif;

}

h1 {
  color: #66BFBF;
  /* line-height: 2; */
  margin: 50px auto 0 auto;
  /* width: 10%;
  margin: 0 auto 0 auto */
  font-family: 'Sacramento', cursive;
  /* font-size: 90px; */
  font-size: 560%
  /* OR font-size: 5.6em */
  /* >>> to make font size dynamic use percent. 16 px = 100%, then if our requirement is 90% then, 90/16*100% = 560% || 16px also known as 1em*/
   
}

h2 {
  color: #66BFBF;
  font-family: 'Montserrat', sans-serif;
  font-size: 2.5rem;
  font-weight: normal;
  padding-bottom: 10px;

}

h3 {
  color: #11999E;
  font-family: 'Montserrat', sans-serif;

}

p {
  line-height: 2;
}

hr {
  border: dotted #EAF6F6 6px;
  border-bottom: none;
  width: 4%;
  margin: 100px auto;
}

a {
  color: #11999E;
  font-family: 'Montserrat', sans-serif;
  margin: 10px 20px;
  text-decoration: none;
}

a:hover {
  color: #EAF6F6
}

.cloud-b {
  margin: 200px auto;
}
.top-container {
  background-color: #EAF6F6;
  position: relative;
  padding-top: 100px;
}

.middle-container {
  margin: 100px 0;

}

.bottom-container {
  background-color: #66BFBF;
  padding: 50px 0 20px;
}

.skill-row {
width: 50%;
margin: 100px auto 100px auto;
text-align: left;

}

.meraphoto {
  width: 10%;
  margin-top: 50px;
}

.pro {
  text-decoration: underline;
}

.intro {
  width: 30%;
  margin: auto;
}

.top-cloud {
  position: absolute;
  right: 550px;
  top: 40px;
}

.contact-message {
  width: 40%;
  margin: 40px auto 60px;
}

.bottom-cloud {
  position: absolute;
  left: 500px;
  bottom: 300px;
}

.program {
  width: 25%;
  float: left;
  margin-right: 30px;
}

.code {
  width: 25%;
  float: right;
  margin-right: 30px;

}

.btn {
  background: #11CDD4;
  background-image: -webkit-linear-gradient(top, #11CDD4, #11999E);
  background-image: -moz-linear-gradient(top, #11CDD4, #11999E);
  background-image: -ms-linear-gradient(top, #11CDD4, #11999E);
  background-image: -o-linear-gradient(top, #11CDD4, #11999E);
  background-image: linear-gradient(to bottom, #11CDD4, #11999E);
  -webkit-border-radius: 8;
  -moz-border-radius: 8;
  border-radius: 8px;
  font-family: 'Montserrat', sans-serif;
  color: #ffffff;
  font-size: 20px;
  padding: 10px 20px 10px 20px;
  text-decoration: none;
}

.btn:hover {
  background: #30E3CB;
  background-image: -webkit-linear-gradient(top, #30E3CB, #2BC48D);
  background-image: -moz-linear-gradient(top, #30E3CB, #2BC48D);
  background-image: -ms-linear-gradient(top, #30E3CB, #2BC48D);
  background-image: -o-linear-gradient(top, #30E3CB, #2BC48D);
  background-image: linear-gradient(to bottom, #30E3CB, #2BC48D);
  text-decoration: none;
}

.copyright {
  color: #EAF6F6;
  font-size: 0.75rem;
  padding: 20px 0;
}

/* p {
  background-color: pink;
  width: 100px;
  display: inline;
  >>> display with inline value will join (make all paragraph text in one line until horizontal space ends). This won't allow to change the width

  display: inline-block;
  >>> best of both world. this will align the text as per inline still it will give option to change the width. 

  display: none;
  >>> This remove the element from the output. Useful when we want to hide something from the output and can show when needed. 

  visibility: hidden;
  >>> this will stop showing up the element from its intended location but other elements would not occupy its place. that location would show empty. 
} */

/* span {
  display: block;
  >>> this will convert spanned text to block text, all concern text would get their own boxes, no inline (side by side text). This allow changing width
} */